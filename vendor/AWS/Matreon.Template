AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a single EC2 instance with a pruned Bitcoin Core node, C-Lightning,
  Lightning Charge, Postgres, Ruby on Rails and Matreon.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Server
        Parameters:
          - KeyName
          - BugsEmail
      - Label:
          default: Bitcoin
        Parameters:
          - Network
      - Label:
          default: Matreon
        Parameters:
          - HostName
          - FromEmail
          - SmtpHost
          - SmtpUser
          - SmtpPassword
          - SmtpPort
      - Label:
          default: Podcast
        Parameters:
          - Podcast
          - PodcastTitle
          - PodcastImage
          - PodcastUrl
      - Label:
          default: Developer
        Parameters:
          - Repository
          - Branch

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  Network:
    Description: Real Bitcoin or testnet
    Type: String
    Default: testnet
    AllowedValues:
      - testnet
      - bitcoin
  HostName:
    Default: http://example.com
    Description: Hostname, no trailing slash
    Type: String
    MinLength: '5'
    MaxLength: '100'
  FromEmail:
    Default: you@example.com
    Description: From email address
    Type: String
    MinLength: '5'
    MaxLength: '100'
  BugsEmail:
    Default: bugs@example.com
    Description: Bug report email address
    Type: String
    MinLength: '5'
    MaxLength: '100'
  SmtpHost:
    Default: smtp.fastmail.com
    Description: SMTP server
    Type: String
    MinLength: '5'
    MaxLength: '100'
  SmtpPort:
    Default: '587'
    Description: SMTP port
    Type: String
    MinLength: '1'
    MaxLength: '5'
  SmtpUser:
    Default: you@example.com
    Description: SMTP username
    Type: String
    MinLength: '5'
    MaxLength: '100'
  SmtpPassword:
    Default: ''
    Description: SMTP password
    Type: String
    NoEcho: 'true'
    MinLength: '0'
    MaxLength: '100'
  Podcast:
    Description: Enable podcast feature. Currently requires an existing RSS source.
    Type: String
    Default: '0'
    AllowedValues:
      - '0'
      - '1'
  PodcastTitle:
    Description: Podcast title
    Type: String
    MinLength: '0'
    MaxLength: '100'
  PodcastImage:
    Description: Podcast image URL
    Type: String
    MinLength: '0'
    MaxLength: '255'
  PodcastUrl:
    Description: Existing podcast RSS feed
    Type: String
    MinLength: '0'
    MaxLength: '255'
  GitURL:
    Description: Git repository URL
    Type: String
    MinLength: '0'
    MaxLength: '255'
    Default: 'https://github.com/Sjors/matreon.git'
  GitBranch:
    Description: Git branch
    Type: String
    MinLength: '0'
    MaxLength: '255'
    Default: 'master'
Conditions:
  NetworkBitcoin: !Equals [!Ref 'Network', 'bitcoin']
  NetworkTestnet: !Equals [!Ref 'Network', 'testnet']
Resources:
  WebServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          full_install:
            - install_cfn
            - configure_system
            - install_docker
            - install_bitcoind
            - install_lightningd
            - install_container_charge
            - install_docker_compose_with_pg_and_rails
            - initial_blockchain_download
            - prepare_matreon
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.WebServer.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v          --stack ${AWS::StackName}         --resource WebServer          --configsets full_install          --region ${AWS::Region}
                runas=root
              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        
        configure_system:
          files:
            /matreon_data/.env:
              content: !Sub |
                HOSTNAME=${HostName}
                FROM_EMAIL=${FromEmail}
                BUGS_TO=${BugsEmail}
                SMTP_HOST=${SmtpHost}
                SMTP_PORT=${SmtpPort}
                SMTP_USERNAME=${SmtpUser}
                SMTP_PASSWORD=${SmtpPassword}
                
                PODCAST=${Podcast}
                PODCAST_TITLE=${PodcastTitle}
                PODCAST_URL=${PodcastUrl}
                PODCAST_IMAGE=${PodcastImage}
                DATADIR=/matreon_data
              mode: '000400'

          commands:
            01_upgrade:
              command: yum update -y
            02_basic_tools:
              command: yum install git jq -y
            03_format_magnetic_volume:
              command: mkfs -t ext4 /dev/xvdb
            04_mount_magnetic_volume:
              command: mkdir /mnt/magnetic
                      && echo "/dev/xvdb /mnt/magnetic ext4 defaults,nofail 0 2" >> /etc/fstab
                      && mount -a
            10_clone_repo:
              command: !Sub
                git clone ${GitURL} /usr/local/src/matreon && cd /usr/local/src/matreon && git checkout ${GitBranch}
            20_add_user_bitcoin:
              command: groupadd -r bitcoin && useradd -r -m -g bitcoin bitcoin
            30_copy_systemd_files:
              command: cp /usr/local/src/matreon/vendor/systemd/* /lib/systemd/system
            40_copy_bitcoind_files:
              command: mkdir /etc/bitcoin && cp /usr/local/src/matreon/vendor/bitcoin/bitcoin.conf /etc/bitcoin/bitcoin.conf 
                       && chmod 444 /etc/bitcoin/bitcoin.conf
            41_set_bitcoin_network:
              command: 
                !If 
                  - NetworkBitcoin
                  - echo
                  - echo "testnet=1" >> /etc/bitcoin/bitcoin.conf
            42_add_bitcoin_dir:
              command: mkdir /home/bitcoin/.bitcoin && chown -R bitcoin:bitcoin /home/bitcoin/.bitcoin
            43_add_blocks_dir:
              command: 
                !If 
                  - NetworkBitcoin
                  - su - bitcoin --command "mkdir -p ~/.bitcoin/blocks-index"
                    && mkdir /mnt/magnetic/blocks && chown -R bitcoin:bitcoin /mnt/magnetic/blocks
                    && su - bitcoin --command "ln -s /home/bitcoin/.bitcoin/blocks-index /mnt/magnetic/blocks/index" 
                    && su - bitcoin --command "ln -s /mnt/magnetic/blocks /home/bitcoin/.bitcoin/blocks"
                  - su - bitcoin --command "mkdir -p ~/.bitcoin/testnet3/blocks-index"
                    && mkdir /mnt/magnetic/blocks-testnet3 && chown -R bitcoin:bitcoin /mnt/magnetic/blocks-testnet3
                    && su - bitcoin --command "ln -s /home/bitcoin/.bitcoin/testnet3/blocks-index /mnt/magnetic/blocks-testnet3/index" 
                    && su - bitcoin --command "ln -s /mnt/magnetic/blocks-testnet3 /home/bitcoin/.bitcoin/testnet3/blocks"
            50_copy_lightnind_files:
              command: mkdir /home/bitcoin/.lightning && cp /usr/local/src/matreon/vendor/lightning/config /home/bitcoin/.lightning
                       && chmod 444 /home/bitcoin/.lightning/config
            51_set_lightning_network:
              command:
                !If 
                  - NetworkBitcoin
                  - echo "network=bitcoin" >> /home/bitcoin/.lightning/config
                  - echo "network=testnet" >> /home/bitcoin/.lightning/config
            51_set_lightning_announce_addr:
              command: !Sub 
                echo "announce-addr=${IPAddress}" >> /home/bitcoin/.lightning/config
            90_set_secret_key_base:
              command: echo "SECRET_KEY_BASE=`hexdump -n 64 -e '16/4 \"%08x\" 1 \"\n\"' /dev/random`" >> /matreon_data/.env
            91_set_devise_secret_key_key:
              command: echo "DEVISE_SECRET_KEY=`hexdump -n 64 -e '16/4 \"%08x\" 1 \"\n\"' /dev/random`" >> /matreon_data/.env
            92_set_lightning_charge_api_token:
              command: echo "LIGHTNING_CHARGE_API_TOKEN=`hexdump -n 64 -e '16/4 \"%08x\" 1 \"\n\"' /dev/random`" >> /matreon_data/.env
        
        install_docker:
          commands:
            01_install_docker:
              command: yum install -y docker
            02_install_docker_compose:
              command: curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname
                -s)-$(uname -m) -o /usr/local/bin/docker-compose &&chmod +x /usr/local/bin/docker-compose
                &&ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose &&chmod
                +x /usr/bin/docker-compose
            03_start_service:
              command: service docker start
              
        install_bitcoind:
          commands:
            01_install:
              command: sh /usr/local/src/matreon/vendor/bitcoin/install.sh

        install_lightningd:
          commands:
            01_yum_depends:
              command: yum install autoconf automake libtool gmp-devel sqlite-devel python python3 net-tools -y
            02_clone_repo:
              command: git clone https://github.com/ElementsProject/lightning /usr/local/src/lightning
            03_make:
              command: cd /usr/local/src/lightning && make && make install
            04_fix_permissions:
              command: chown -R bitcoin:bitcoin /home/bitcoin/.lightning

        install_container_charge:
          commands:
            01_configure_datadir:
              command: mkdir /matreon_data/charge
            02_add_symlink:
              command: ln -s /home/bitcoin/.lightning /matreon_data/lightning
            03_clone_repo:
              command: git clone https://github.com/Sjors/lightning-charge /usr/local/src/lightning-charge
                && cd /usr/local/src/lightning-charge && git checkout 2018/05/node-uri
            04_docker_build:
              command: docker build /usr/local/src/lightning-charge -t charge:latest

        install_docker_compose_with_pg_and_rails:
          commands:
            01_make_db_dir:
              command: mkdir /matreon_data/pg
            03_build_rails_container:
              command: cd /usr/local/src/matreon && docker-compose build
  
        initial_blockchain_download:
          commands:
            01_format_ssd:
              command: mkfs.ext4 -E nodiscard /dev/nvme0n1
            02_mount_ssd:
              command: mkdir /mnt/ssd && mount -o discard /dev/nvme0n1 /mnt/ssd
            04_add_ssd_bitcoin_dir:
              command: mkdir /mnt/ssd/bitcoin && chown -R bitcoin:bitcoin /mnt/ssd/bitcoin
            05_start_bitcoind:
              command: su - bitcoin --command "bitcoind -conf=/etc/bitcoin/bitcoin.conf -datadir=/mnt/ssd/bitcoin -dbcache=20000 -prune=1 -daemon"
            06_wait_for_sync_prune_stop:
              command: su - bitcoin --command "/usr/local/src/matreon/vendor/bitcoin/wait_for_ibd.sh"
            07_copy_pruned_chain:
              command: 
                !If 
                  - NetworkBitcoin
                  -    su - bitcoin --command "mv /mnt/ssd/bitcoin/blocks/*.dat /home/bitcoin/.bitcoin/blocks"
                    && su - bitcoin --command "mv /mnt/ssd/bitcoin/blocks/index/* /home/bitcoin/.bitcoin/blocks/index"
                    && su - bitcoin --command "mv /mnt/ssd/bitcoin/chainstate /home/bitcoin/.bitcoin"
                  -    su - bitcoin --command "mv /mnt/ssd/bitcoin/testnet3/blocks/*.dat /home/bitcoin/.bitcoin/testnet3/blocks"
                    && su - bitcoin --command "mv /mnt/ssd/bitcoin/testnet3/blocks/index/* /home/bitcoin/.bitcoin/testnet3/blocks/index"
                    && su - bitcoin --command "mv /mnt/ssd/bitcoin/testnet3/chainstate /home/bitcoin/.bitcoin/testnet3"
        prepare_matreon:
          commands:
            01_install_crontab:
              command: "echo '0 * * * * root cd /usr/local/src/matreon && set -a &&\
                \ source /matreon_data/.env && docker-compose run web rake invoices:process'\
                \ >> /tmp/crontab \necho '0 * * * * root cd /usr/local/src/matreon\
                \ && set -a && source /matreon_data/.env && docker-compose run web\
                \ rake podcast:fetch' >> /tmp/crontab \necho '' >> /tmp/crontabcrontab\
                \ /tmp/crontab"
            02_start_bitcoind_service_after_reboot:
              command: systemctl enable bitcoind.service
            03_start_lightningd_service_after_reboot:
              command: systemctl enable lightningd.service
            10_start_docker_after_reboot:
              command: systemctl enable docker
            11_start_docker_compose_service_after_reboot:
              command: systemctl enable docker-compose-matreon.service
            20_run_db_migrate_after_reboot:
              command: systemctl enable db-migrate.service
            90_cleanup:
              command: rm -rf /tmp/*
            99_shutdown:
              command: shutdown 2

    Properties:
      ImageId: ami-43eec3a8
      InstanceType: i3.2xlarge
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: '25'
            VolumeType: 'gp2'
        - DeviceName: /dev/xvdb
          Ebs:
            VolumeSize: '40'
            VolumeType: 'standard'
      SecurityGroups:
        - !Ref 'WebServerSecurityGroup'
      KeyName: !Ref 'KeyName'
      Tags:
        - Key: Name
          Value: Matreon
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash -xe
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v          --stack ${AWS::StackId}         --resource WebServer          --configsets full_install          --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $?          --stack ${AWS::StackId}         --resource WebServer          --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT360M
  IPAddress:
    Type: AWS::EC2::EIP
  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'WebServer'
      EIP: !Ref 'IPAddress'
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH, HTTP, Bitcoin & Lightning P2P
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 
            !If 
              - NetworkBitcoin
              - '8883'
              - '18883'
          ToPort: 
            !If 
              - NetworkBitcoin
              - '8883'
              - '18883'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '9735'
          ToPort: '9735'
          CidrIp: 0.0.0.0/0

Outputs:
  WebsiteURL:
    Value: !Sub 'http://${WebServer.PublicDnsName}/'
    Description: URL for your Matreon
